---
- name: Create unseal directories
  file:
    path: "{{ unseal_keys_dir_output }}"
    state: directory
  delegate_to: localhost
  become: no

- name: Create root key directories
  file:
    path: "{{ root_token_dir_output }}"
    state: directory
  delegate_to: localhost
  become: no

- name: Is Vault already initialized
  shell: "{{ vault_bin_path }}/vault status -format json"
  vars:
    vault_addr_protocol: "{{ vault_tls_disable | ternary('http', 'https') }}"
  environment:
    VAULT_ADDR: "{{ vault_addr_protocol }}://{{ vault_address }}:{{ vault_port }}"
  register: vault_status_results
  ignore_errors: true
  tags:
    - skip_ansible_lint

- name: Parse output of vault status
  set_fact:
    vault_status_parsed: "{{ vault_status_results.stdout | from_json }}"

- name: Display all variables/facts known for a host
  debug: var=vault_status_parsed

- name: Initialise Vault operator
  shell: "{{ vault_bin_path }}/vault operator init -key-shares=5 -key-threshold=3 -format json"
  vars:
    vault_addr_protocol: "{{ vault_tls_disable | ternary('http', 'https') }}"
  environment:
    VAULT_ADDR: "{{ vault_addr_protocol }}://{{ vault_address }}:{{ vault_port }}"
  register: vault_init_results
  when: not vault_status_parsed.initialized | bool
  tags:
    - skip_ansible_lint

- name: Parse output of vault init
  set_fact:
    vault_init_parsed: "{{ vault_init_results.stdout | from_json }}"
  when: not vault_status_parsed.initialized | bool

- name: Write unseal keys to files
  copy:
    dest: "{{ unseal_keys_dir_output }}/unseal_key_{{ item.0 }}"
    content: "{{ item.1 }}"
  with_indexed_items: "{{ vault_init_parsed.unseal_keys_hex }}"
  delegate_to: localhost
  become: no
  when: not vault_status_parsed.initialized | bool

- name: Write root token to file
  copy:
    content: "{{ vault_init_parsed.root_token }}"
    dest: "{{ root_token_dir_output }}/rootkey"
  delegate_to: localhost
  become: no
  when: not vault_status_parsed.initialized | bool

- name: Reading unseal key contents
  command: cat {{ item }}
  register: unseal_keys
  with_fileglob: "{{ unseal_keys_dir_output }}/*"
  delegate_to: localhost
  become: no
  when:
    - not vault_status_parsed.initialized | bool
    - not vault_status_parsed.sealed | bool

- name: Unseal vault with unseal keys
  shell: |
    {{ vault_bin_path }}/vault operator unseal {{ item.stdout }}
  vars:
    vault_addr_protocol: "{{ vault_tls_disable | ternary('http', 'https') }}"
  environment:
    VAULT_ADDR: "{{ vault_addr_protocol }}://{{ vault_address }}:{{ vault_port }}"
  with_items: "{{ unseal_keys.results }}"
  when:
    - not vault_status_parsed.initialized | bool
    - not vault_status_parsed.sealed | bool
